// generated by ddl2cpp TabClassifyList_rel.ddl TabClassifyList_rel sqlpp11_connector
#ifndef SQLPP_CONNECTOR_TABCLASSIFYLIST_REL_H
#define SQLPP_CONNECTOR_TABCLASSIFYLIST_REL_H

#include <sqlpp11/table.h>
#include <sqlpp11/data_types.h>
#include <sqlpp11/char_sequence.h>

namespace sqlpp11_connector
{
  namespace TabClassifyListRel_
  {
    struct TFaListID
    {
      struct _alias_t
      {
        static constexpr const char _literal[] =  "tFaListID";
        using _name_t = sqlpp::make_char_sequence<sizeof(_literal), _literal>;
        template<typename T>
        struct _member_t
          {
            T tFaListID;
            T& operator()() { return tFaListID; }
            const T& operator()() const { return tFaListID; }
          };
      };
      using _traits = sqlpp::make_traits<sqlpp::integer, sqlpp::tag::require_insert>;
    };
    struct TSonListID
    {
      struct _alias_t
      {
        static constexpr const char _literal[] =  "tSonListID";
        using _name_t = sqlpp::make_char_sequence<sizeof(_literal), _literal>;
        template<typename T>
        struct _member_t
          {
            T tSonListID;
            T& operator()() { return tSonListID; }
            const T& operator()() const { return tSonListID; }
          };
      };
      using _traits = sqlpp::make_traits<sqlpp::integer, sqlpp::tag::require_insert>;
    };
  }

  struct TabClassifyListRel: sqlpp::table_t<TabClassifyListRel,
               TabClassifyListRel_::TFaListID,
               TabClassifyListRel_::TSonListID>
  {
    struct _alias_t
    {
      static constexpr const char _literal[] =  "TabClassifyList_rel";
      using _name_t = sqlpp::make_char_sequence<sizeof(_literal), _literal>;
      template<typename T>
      struct _member_t
      {
        T TabClassifyListRel;
        T& operator()() { return TabClassifyListRel; }
        const T& operator()() const { return TabClassifyListRel; }
      };
    };
  };
} // namespace sqlpp11_connector
#endif
